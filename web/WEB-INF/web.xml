<?xml version="1.0" encoding="UTF-8"?>
<web-app id="WebApp_9" version="2.4"
 xmlns="http://java.sun.com/xml/ns/j2ee"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
 <!-- 02 display-name 元素提供 GUI 工具可能会用来标记这个特定的Web 应用的一个名称 -->
 <description>通航原型</description>
 <display-name>thyx</display-name>
 <!-- 03 description 元素给出与此有关的说明性文本 -->
 <!-- 04 context-param 元素声明应用范围内的初始化参数 -->
 <context-param>
  <param-name>contextConfigLocation</param-name>
  <param-value>/WEB-INF/applicationContext-*.xml</param-value>
 </context-param>
 <!-- 定义整合SiteMesh必须的ActionContextCleanUp Filter 
 <filter>
		<filter-name>struts-cleanup</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ActionContextCleanUp</filter-class>
	</filter> 
 定义整合SiteMesh和核心 Filter -->
 <filter>
  <filter-name>sitemesh</filter-name>
  <filter-class>com.opensymphony.module.sitemesh.filter.PageFilter</filter-class>
 </filter>
 <!-- 04 filter 过滤器元素将一个名字与一个实现 javax.servlet.Filter 接口的类相关联 -->
 <filter>
  <filter-name>projectFilter</filter-name>
  <filter-class>com.hatc.common.web.filter.ProjectFilter</filter-class>
 </filter>
 <filter>
  <filter-name>hibernateFilter</filter-name>
  <filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
 </filter>
 <filter>
  <filter-name>encodingFilter</filter-name>
  <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
  <init-param>
   <param-name>encoding</param-name>
   <param-value>GBK</param-value>
  </init-param>
  <init-param>
   <param-name>forceEncoding</param-name>
   <param-value>true</param-value>
  </init-param>
 </filter>
 <filter>
  <filter-name>encodingFilterAJAX</filter-name>
  <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
  <init-param>
   <param-name>encoding</param-name>
   <param-value>utf-8</param-value>
  </init-param>
  <init-param>
   <param-name>forceEncoding</param-name>
   <param-value>true</param-value>
  </init-param>
 </filter>
 <!-- 
    <filter>
        <filter-name>struts2</filter-name>
        <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
    </filter> 

    <filter-mapping>
        <filter-name>struts-cleanup</filter-name>
        <url-pattern>*.action</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>sitemesh</filter-name>
        <url-pattern>*.action</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>struts-cleanup</filter-name>
        <url-pattern>*.jsp</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>sitemesh</filter-name>
        <url-pattern>*.jsp</url-pattern>
    </filter-mapping>
 05 一旦命名了一个过滤器，就要利用 filter-mapping 元素把它与一个或多个 servlet 或 JSP 页面相关联 -->
 <filter-mapping>
  <filter-name>projectFilter</filter-name>
  <url-pattern>*.do</url-pattern>
 </filter-mapping>
 <filter-mapping>
  <filter-name>projectFilter</filter-name>
  <url-pattern>*.jsp</url-pattern>
 </filter-mapping>
 <filter-mapping>
  <filter-name>hibernateFilter</filter-name>
  <url-pattern>*.do</url-pattern>
 </filter-mapping>
 <filter-mapping>
  <filter-name>encodingFilter</filter-name>
  <url-pattern>*.do</url-pattern>
 </filter-mapping>
 <filter-mapping>
  <filter-name>encodingFilter</filter-name>
  <url-pattern>*.html</url-pattern>
 </filter-mapping>
 <filter-mapping>
  <filter-name>encodingFilter</filter-name>
  <url-pattern>*.jsp</url-pattern>
 </filter-mapping>
 
 <filter-mapping>
  <filter-name>encodingFilterAJAX</filter-name>
  <url-pattern>*.ax</url-pattern>
 </filter-mapping>
 <filter-mapping>
  <filter-name>projectFilter</filter-name>
  <url-pattern>*.ax</url-pattern>
 </filter-mapping>
 <!-- <filter-mapping>
        <filter-name>struts2</filter-name>
        <url-pattern>*.action</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>struts2</filter-name>
        <url-pattern>*.jsp</url-pattern>
    </filter-mapping> 
 06 事件监听程序在建立、修改和删除会话或 servlet 环境时得到通知。Listener 元素指出事件监听程序类 -->
 <listener>
  <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
 </listener>
 <!-- 
    <servlet>
        <servlet-name>img</servlet-name>
        <servlet-class>org.yeeku.web.AuthImg</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>img</servlet-name>
	    <url-pattern>/example/lee/authImg</url-pattern>
    </servlet-mapping>
     
 07 在向servlet 或JSP 页面制定初始化参数或定制URL 时，
        必须首先命名 servlet 或 JSP 页面。Servlet 元素就是用来完成此项任务的 -->
 <servlet>
  <servlet-name>action</servlet-name>
  <servlet-class>org.apache.struts.action.ActionServlet</servlet-class>
  <init-param>
   <param-name>config</param-name>
   	<param-value>
	   <!-- struts配置文件，引用多人配置时，以逗号分隔加入多配置文件 -->
	   /WEB-INF/struts-config.xml,/WEB-INF/struts-config-luofengmei.xml,/WEB-INF/struts-config-wangdonghua.xml,/WEB-INF/struts-config-anhuaimei.xml
  	</param-value>
  </init-param>
  <init-param>
   <param-name>debug</param-name>
   <param-value>3</param-value>
  </init-param>
  <init-param>
   <param-name>detail</param-name>
   <param-value>3</param-value>
  </init-param>
  <load-on-startup>0</load-on-startup>
 </servlet>
 <servlet>
  <servlet-name>ProjectInitServlet</servlet-name>
  <servlet-class>com.hatc.common.web.servlet.ProjectInitServlet</servlet-class>
  <load-on-startup>1</load-on-startup>
 </servlet>
 <servlet-mapping>
  <servlet-name>action</servlet-name>
  <url-pattern>*.do</url-pattern>
 </servlet-mapping>
 <servlet-mapping>
  <servlet-name>action</servlet-name>
  <url-pattern>*.ax</url-pattern>
 </servlet-mapping>
 <!-- DWR配置开始 
 <servlet>
		<servlet-name>dwr</servlet-name>
		<servlet-class>org.directwebremoting.servlet.DwrServlet</servlet-class>
		<init-param>
			<param-name>debug</param-name>
			<param-value>true</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>dwr</servlet-name>
		<url-pattern>/dwr/*</url-pattern>
	</servlet-mapping> 
 DWR配置结束 
 润乾 
    <servlet>
        <servlet-name>reportServlet</servlet-name>
        <servlet-class>com.runqian.report4.view.ReportServlet</servlet-class>
        <init-param>
            <param-name>configFile</param-name>
            <param-value>/WEB-INF/reportConfig.xml</param-value>
        </init-param>
        <load-on-startup>2</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>reportServlet</servlet-name>
        <url-pattern>/reportServlet</url-pattern>
    </servlet-mapping>
 08 服务器一般为servlet 提供一个缺省的URL：http://host/webAppPrefix/servlet/ServletName。
        但是，常常会更改这个URL，以便 servlet 可以访问初始化参数或更容易地处理相对URL。
        在更改缺省URL 时，使用 servlet-mapping 元素 
 09 如果某个会话在一定时间内未被访问，服务器可以抛弃它以节省内存。
        可通过使用 HttpSession 的 setMaxInactiveInterval 方法明确设置单个会话对象的超时值，
        或者可利用 session-config 元素制定缺省超时值，单位“分钟” -->
 <session-config>
  <session-timeout>30</session-timeout>
 </session-config>
 <welcome-file-list>
  <!--thyx 暂时将首页跳转到登陆页面 -->
  <welcome-file>login.jsp</welcome-file>
 </welcome-file-list>
 <!-- 12 error-page 元素使得在返回特定HTTP 状态代码时，或者特定类型的异常被抛出时，能够制定将要显示的页面 -->
 <error-page>
  <error-code>404</error-code>
  <location>/404.jsp</location>
 </error-page>
 <error-page>
  <error-code>500</error-code>
  <location>/500.jsp</location>
 </error-page>
 <login-config>
  <auth-method>BASIC</auth-method>
 </login-config>
 <!-- 13 taglib taglib 元素对标记库描述符文件（Tag Libraryu Descriptor file）指定别名。
        此功能使你能够更改TLD 文件的位置，而不用编辑使用这些文件的JSP 页面。
        resource-env-ref resource-env-ref 元素声明与资源相关的一个管理对象。
        resource-ref resource-ref 元素声明一个资源工厂使用的外部资源。
        security-constraint security-constraint 元素制定应该保护的URL。它与login-config
        元素联合使用
        login-config 用login-config 元素来指定服务器应该怎样给试图访问受保护页面的
        用户授权。它与sercurity-constraint 元素联合使用。
        security-role security-role 元素给出安全角色的一个列表，这些角色将出现在servlet
        元素内的security-role-ref 元素的role-name子元素中。分别地声明角色可使高级IDE
        处理安全信息更为容易。
        env-entry env-entry 元素声明Web 应用的环境项。
        ejb-ref ejb-ref 元素声明一个EJB 的主目录的引用。
        ejb-local-ref ejb-local-ref 元素声明一个EJB 的本地主目录的应用 -->
</web-app>
